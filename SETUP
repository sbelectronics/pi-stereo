configured terminal emulator for vt102 / utf-8

export LANG=posix
export TERM=vt102
raspi-config
   expand fs
   enable spi
   enable i2c
apt-get update
apt-get install emacs23-nox
# configure network in ubiquiti instead
#emacs /etc/netowrk/intercaces
#  address 198.0.0.215
#  netmask 255.255.255.0
#  network 198.0.0.0
#  broadcast 198.0.0.255
#  gateway 198.0.0.108

sudo bash -c "echo i2c-bcm2708 >> /etc/modules"
sudo bash -c "echo i2c-dev >> /etc/modules"
sudo reboot

# add smbaker
sudo adduser smbaker --uid 1026
sudo usermod smbaker -a -G pi,adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio

# setup ssh key
mkdir ~/.ssh
cat > ~/.ssh/authorized_keys
    # paste the usual key
chmod 0700 ~/.ssh
chmod 0600 ~/.ssh/authorized_keys

mkdir /home/pi/.config

# from home
scp alsa-base.conf pi@198.0.0.215:/home/pi/
scp start_pianobar.sh pi@198.0.0.215:/home/pi/  
scp start_django.sh pi@198.0.0.215:/home/pi/
scp dotconfig/pianobar/* pi@198.0.0.215:/home/pi/.config/pianobar/

# moar stuff
sudo apt-get -y install screen python-smbus i2c-tools python-pip
sudo cp alsa-base.conf /etc/modprobe.d/
rm -f /home/pi/.config/pianobar/ctl
mkfifo /home/pi/.config/pianobar/ctl

# django
sudo apt-get -y install python-pip
sudo apt-get -y install python-setuptools
#sudo easy_install pip
sudo apt-get -y install sqlite3 python-dev
sudo pip install Django==1.7
sudo pip install pyephem

# rtl-sdr
sudo apt-get install git cmake libusb-dev libusb-1.0-0-dev build-essential
git clone git://git.osmocom.org/rtl-sdr.git
cd rtl-sdr/
mkdir build
cd build
cmake ../ -DINSTALL_UDEV_RULES=ON
make
sudo make install
sudo cp ../rtl-sdr.rules /etc/udev/rules.d/
sudo ldconfig
sudo rmmod dvb_usb_rtl28xxu
sudo bash
   echo "blacklist dvb_usb_rtl28xxu" > /etc/modprobe.d/blacklist-dvb_usb_rtl28xxu.conf
#test
# rtl_fm -M wbfm -f 99.1M -r 48k | aplay -r 48k -f S16_LE

# pianobar
git clone https://github.com/PromyLOPh/pianobar.git
sudo apt-get -y install libao-dev libmad0-dev libfaad-dev ffmpeg libavcodec-dev libavformat-dev libavfilter-dev libcurl4-openssl-dev libjsonc-dev libgcrypt20-dev
#sudo apt-get -y install libao-dev libmad0-dev libfaad-dev libgnutls-dev libjson0-dev libgcrypt11-dev
cd pianobar
make clean && make
gmake install
#sudo make install
sudo mkdir /var/pianobar
sudo chmod a+rwx /var/pianobar
sudo mkdir /music

#autostart
crontab -e
  @reboot bash /home/pi/start_django.sh &> /dev/null

#avoid corrupting the SD card:
sudo emacs /etc/fstab
tmpfs    /var/pianobar   tmpfs    defaults,noatime,nosuid,mode=0777,size=1m 0 0       
tmpfs    /tmp            tmpfs    defaults,noatime,nosuid,size=100m    0 0
tmpfs    /var/tmp        tmpfs    defaults,noatime,nosuid,size=30m    0 0 
tmpfs    /var/log        tmpfs    defaults,noatime,nosuid,mode=0755,size=100m    0 0
tmpfs    /var/run        tmpfs    defaults,noatime,nosuid,mode=0755,size=2m    0 0

#add to fstab for music playing
<fileserver-ip>:/fileserver/public/music  /music   nfs     defaults,noac,nolock,ro        0 0

#boot in readonly
sudo emacs /boot/cmdline.txt
    add to cmdline: fastboot noswap ro
sudo emacs /etc/fstab
    add ro to each mmc mount

# get the latest TLS Fingerprint from pandors
# OLD - openssl s_client -connect tuner.pandora.com:443 < /dev/null 2> /dev/null | openssl x509 -noout -fingerprint | tr -d ':' | cut -d'=' -f2
openssl s_client -connect internal-tuner.pandora.com:443 < /dev/null 2> /dev/null | openssl x509 -noout -fingerprint | tr -d ':' | cut -d'=' -f2
